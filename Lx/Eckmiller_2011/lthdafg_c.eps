%!PS-Adobe-2.0 EPSF-2.0
%%Title: lthdafg_c.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Sep 28 19:09:36 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 5 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 20.000 def
/userlinewidth gnulinewidth def
%
/vshift -106 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (lthdafg_c.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Helen Eckmiller)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep 28 19:09:36 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 320 scalefont setfont
1.000 UL
LTb
1483 1120 M
94 0 V
9803 0 R
-94 0 V
1483 1403 M
94 0 V
9803 0 R
-94 0 V
1483 1642 M
94 0 V
9803 0 R
-94 0 V
1483 1849 M
94 0 V
9803 0 R
-94 0 V
1483 2031 M
94 0 V
9803 0 R
-94 0 V
1483 2195 M
189 0 V
9708 0 R
-189 0 V
stroke
1291 2195 M
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (42)]
] -138.7 MRshow
1.000 UL
LTb
1483 2195 M
94 0 V
9803 0 R
-94 0 V
1483 3269 M
94 0 V
9803 0 R
-94 0 V
1483 3898 M
94 0 V
9803 0 R
-94 0 V
1483 4344 M
94 0 V
9803 0 R
-94 0 V
1483 4690 M
94 0 V
9803 0 R
-94 0 V
1483 4973 M
94 0 V
9803 0 R
-94 0 V
1483 5212 M
94 0 V
9803 0 R
-94 0 V
1483 5419 M
94 0 V
9803 0 R
-94 0 V
1483 5602 M
94 0 V
9803 0 R
-94 0 V
1483 5765 M
189 0 V
9708 0 R
-189 0 V
stroke
1291 5765 M
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (43)]
] -138.7 MRshow
1.000 UL
LTb
1483 5765 M
94 0 V
9803 0 R
-94 0 V
1483 6840 M
94 0 V
9803 0 R
-94 0 V
1483 7468 M
94 0 V
9803 0 R
-94 0 V
1483 7914 M
94 0 V
9803 0 R
-94 0 V
1483 8260 M
94 0 V
9803 0 R
-94 0 V
1483 8543 M
94 0 V
9803 0 R
-94 0 V
2351 1120 M
0 94 V
0 7329 R
0 -94 V
3084 1120 M
0 94 V
0 7329 R
0 -94 V
3720 1120 M
0 94 V
0 7329 R
0 -94 V
4281 1120 M
0 94 V
0 7329 R
0 -94 V
4782 1120 M
0 189 V
0 7234 R
0 -189 V
stroke
4686 800 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 1)]
] -106.7 MCshow
1.000 UL
LTb
4782 1120 M
0 94 V
0 7329 R
0 -94 V
8081 1120 M
0 94 V
0 7329 R
0 -94 V
10011 1120 M
0 94 V
0 7329 R
0 -94 V
11380 1120 M
0 94 V
0 7329 R
0 -94 V
stroke
1483 8543 N
0 -7423 V
9897 0 V
0 7423 V
-9897 0 V
Z stroke
LCb setrgbcolor
363 4831 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 320.0 0.0 true true 0 (L)]
[(Helvetica) 256.0 -96.0 true true 0 (x)]
[(Helvetica) 320.0 0.0 true true 0 ( [h)]
[(Helvetica) 256.0 -96.0 true true 0 (70)]
[(Helvetica) 256.0 160.0 true true 0 (-2)]
[(Helvetica) 320.0 0.0 true true 0 ( erg s)]
[(Helvetica) 256.0 160.0 true true 0 (-1)]
[(Helvetica) 320.0 0.0 true true 0 (])]
] -106.7 MCshow
grestore
LTb
LCb setrgbcolor
6431 320 M
[ [(Helvetica) 320.0 0.0 true true 0 (T [keV])]
] -106.7 MCshow
LTb
2.500 UP
1.000 UL
LTb
1.000 UL
LT6
1483 1938 M
100 73 V
100 74 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 74 V
99 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
99 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 74 V
100 73 V
99 73 V
100 73 V
100 74 V
100 73 V
100 73 V
100 73 V
100 74 V
100 73 V
14 10 V
2.500 UP
stroke
LT4
LTb
9879 2065 M
[ [(Helvetica) 320.0 0.0 true true 0 (f)]
[(Helvetica) 256.0 -96.0 true true 0 (g)]
[(Helvetica) 320.0 0.0 true true 0 ( )]
[(Symbol) 320.0 0.0 true true 0 (\243)]
[(Helvetica) 320.0 0.0 true true 0 ( f)]
[(Helvetica) 256.0 -96.0 true true 0 (g,mean)]
] -74.7 MRshow
LT4
10071 2065 M
925 0 V
-925 31 R
0 -62 V
925 62 R
0 -62 V
7052 5355 M
0 447 V
-31 -447 R
62 0 V
-62 447 R
62 0 V
6056 3734 M
0 412 V
-31 -412 R
62 0 V
-62 412 R
62 0 V
3765 3121 M
0 1270 V
3734 3121 M
62 0 V
-62 1270 R
62 0 V
9987 6537 M
0 249 V
-31 -249 R
62 0 V
-62 249 R
62 0 V
-2277 51 R
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
-556 -47 R
0 402 V
-31 -402 R
62 0 V
-62 402 R
62 0 V
6123 3739 M
0 498 V
-31 -498 R
62 0 V
-62 498 R
62 0 V
3273 3096 M
0 437 V
-31 -437 R
62 0 V
-62 437 R
62 0 V
477 383 R
0 535 V
-31 -535 R
62 0 V
-62 535 R
62 0 V
2514 2062 M
0 339 V
-31 -339 R
62 0 V
-62 339 R
62 0 V
6164 4291 M
0 568 V
-31 -568 R
62 0 V
-62 568 R
62 0 V
3799 4827 M
0 211 V
-31 -211 R
62 0 V
-62 211 R
62 0 V
3114 557 R
214 0 V
-214 -31 R
0 62 V
214 -62 R
0 62 V
6028 3954 M
55 0 V
-55 -31 R
0 62 V
55 -62 R
0 62 V
3683 3883 M
161 0 V
-161 -31 R
0 62 V
161 -62 R
0 62 V
9860 6667 M
251 0 V
-251 -31 R
0 62 V
251 -62 R
0 62 V
7675 6863 M
131 0 V
-131 -31 R
0 62 V
stroke 7675 6894 M
131 -62 R
0 62 V
-702 163 R
221 0 V
-221 -31 R
0 62 V
221 -62 R
0 62 V
6079 4008 M
87 0 V
-87 -31 R
0 62 V
87 -62 R
0 62 V
3189 3330 M
166 0 V
-166 -31 R
0 62 V
166 -62 R
0 62 V
382 845 R
88 0 V
-88 -31 R
0 62 V
88 -62 R
0 62 V
2448 2241 M
131 0 V
-131 -31 R
0 62 V
131 -62 R
0 62 V
6124 4601 M
80 0 V
-80 -31 R
0 62 V
80 -62 R
0 62 V
3780 4936 M
39 0 V
-39 -31 R
0 62 V
39 -62 R
0 62 V
7052 5595 Dia
6056 3954 Dia
3765 3883 Dia
9987 6667 Dia
7741 6863 Dia
7216 7057 Dia
6123 4008 Dia
3273 3330 Dia
3781 4206 Dia
2514 2241 Dia
6164 4601 Dia
3799 4936 Dia
10533 2065 Dia
2.500 UP
1.000 UL
LT2
LTb
9879 1477 M
[ [(Helvetica) 320.0 0.0 true true 0 (f)]
[(Helvetica) 256.0 -96.0 true true 0 (g)]
[(Helvetica) 320.0 0.0 true true 0 ( > f)]
[(Helvetica) 256.0 -96.0 true true 0 (g,mean)]
] -74.7 MRshow
LT2
10071 1477 M
925 0 V
-925 31 R
0 -62 V
925 62 R
0 -62 V
7504 6584 M
0 441 V
-31 -441 R
62 0 V
-62 441 R
62 0 V
442 -911 R
0 368 V
-31 -368 R
62 0 V
-62 368 R
62 0 V
-459 612 R
0 159 V
-31 -159 R
62 0 V
-62 159 R
62 0 V
2171 578 R
0 261 V
-31 -261 R
62 0 V
-62 261 R
62 0 V
6102 6133 M
0 41 V
-31 -41 R
62 0 V
-62 41 R
62 0 V
5128 5051 M
0 507 V
-31 -507 R
62 0 V
-62 507 R
62 0 V
963 811 R
0 168 V
-31 -168 R
62 0 V
-62 168 R
62 0 V
4692 5712 M
0 242 V
-31 -242 R
62 0 V
-62 242 R
62 0 V
4219 3407 M
0 425 V
-31 -425 R
62 0 V
-62 425 R
62 0 V
4034 -94 R
0 449 V
-31 -449 R
62 0 V
-62 449 R
62 0 V
7753 6629 M
0 255 V
-31 -255 R
62 0 V
-62 255 R
62 0 V
309 88 R
0 481 V
-31 -481 R
62 0 V
-62 481 R
62 0 V
7427 6225 M
0 903 V
-31 -903 R
62 0 V
-62 903 R
62 0 V
8002 6089 M
0 516 V
-31 -516 R
62 0 V
-62 516 R
62 0 V
-660 215 R
258 0 V
-258 -31 R
0 62 V
258 -62 R
0 62 V
217 -542 R
255 0 V
-255 -31 R
0 62 V
255 -62 R
0 62 V
-618 836 R
128 0 V
-128 -31 R
0 62 V
stroke 7485 7207 M
128 -62 R
0 62 V
2012 760 R
248 0 V
-248 -31 R
0 62 V
248 -62 R
0 62 V
6080 6154 M
43 0 V
-43 -31 R
0 62 V
43 -62 R
0 62 V
5089 5325 M
77 0 V
-77 -31 R
0 62 V
77 -62 R
0 62 V
946 1099 R
20 0 V
-20 -31 R
0 62 V
20 -62 R
0 62 V
4657 5838 M
69 0 V
-69 -31 R
0 62 V
69 -62 R
0 62 V
4137 3634 M
162 0 V
-162 -31 R
0 62 V
162 -62 R
0 62 V
3888 314 R
192 0 V
-192 -31 R
0 62 V
192 -62 R
0 62 V
7586 6762 M
328 0 V
-328 -31 R
0 62 V
328 -62 R
0 62 V
98 438 R
160 0 V
-160 -31 R
0 62 V
160 -62 R
0 62 V
7311 6741 M
228 0 V
-228 -31 R
0 62 V
228 -62 R
0 62 V
309 -403 R
304 0 V
-304 -31 R
0 62 V
304 -62 R
0 62 V
7504 6820 CircleF
7977 6309 CircleF
7549 7176 CircleF
9751 7967 CircleF
6102 6154 CircleF
5128 5325 CircleF
6122 6455 CircleF
4692 5838 CircleF
4219 3634 CircleF
8284 3979 CircleF
7753 6762 CircleF
8093 7231 CircleF
7427 6741 CircleF
8002 6369 CircleF
10533 1477 CircleF
1.000 UL
LTb
1483 8543 N
0 -7423 V
9897 0 V
0 7423 V
-9897 0 V
Z stroke
2.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
