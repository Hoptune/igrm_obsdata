%!PS-Adobe-2.0 EPSF-2.0
%%Title: lthdamalmquist.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Sep  7 18:49:34 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 3 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (lthdamalmquist.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Helen Eckmiller)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep  7 18:49:34 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
360 185 M
94 0 V
11012 0 R
-94 0 V
360 502 M
94 0 V
11012 0 R
-94 0 V
360 770 M
94 0 V
11012 0 R
-94 0 V
360 1003 M
94 0 V
11012 0 R
-94 0 V
360 1208 M
94 0 V
11012 0 R
-94 0 V
360 1391 M
189 0 V
10917 0 R
-189 0 V
stroke
180 1391 M
[ [(Helvetica) 300.0 0.0 true true 0 (10)]
[(Helvetica) 240.0 150.0 true true 0 (42)]
] -130.0 MRshow
1.000 UL
LTb
360 1391 M
94 0 V
11012 0 R
-94 0 V
360 2597 M
94 0 V
11012 0 R
-94 0 V
360 3302 M
94 0 V
11012 0 R
-94 0 V
360 3803 M
94 0 V
11012 0 R
-94 0 V
360 4191 M
94 0 V
11012 0 R
-94 0 V
360 4508 M
94 0 V
11012 0 R
-94 0 V
360 4776 M
94 0 V
11012 0 R
-94 0 V
360 5009 M
94 0 V
11012 0 R
-94 0 V
360 5214 M
94 0 V
11012 0 R
-94 0 V
360 5397 M
189 0 V
10917 0 R
-189 0 V
stroke
180 5397 M
[ [(Helvetica) 300.0 0.0 true true 0 (10)]
[(Helvetica) 240.0 150.0 true true 0 (43)]
] -130.0 MRshow
1.000 UL
LTb
360 5397 M
94 0 V
11012 0 R
-94 0 V
360 6603 M
94 0 V
11012 0 R
-94 0 V
360 7308 M
94 0 V
11012 0 R
-94 0 V
360 7809 M
94 0 V
11012 0 R
-94 0 V
360 8197 M
94 0 V
11012 0 R
-94 0 V
360 8514 M
94 0 V
11012 0 R
-94 0 V
1334 185 M
0 94 V
0 8235 R
0 -94 V
2157 185 M
0 94 V
0 8235 R
0 -94 V
2870 185 M
0 94 V
0 8235 R
0 -94 V
3499 185 M
0 94 V
0 8235 R
0 -94 V
4062 185 M
0 189 V
0 8140 R
0 -189 V
stroke
3972 -115 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 1)]
] -100.0 MCshow
1.000 UL
LTb
4062 185 M
0 94 V
0 8235 R
0 -94 V
7764 185 M
0 94 V
0 8235 R
0 -94 V
9930 185 M
0 94 V
0 8235 R
0 -94 V
11466 185 M
0 94 V
0 8235 R
0 -94 V
stroke
360 8514 N
360 185 L
11106 0 V
0 8329 V
360 8514 L
Z stroke
LCb setrgbcolor
-690 4349 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true 0 (L)]
[(Helvetica) 240.0 -90.0 true true 0 (x)]
[(Helvetica) 300.0 0.0 true true 0 ( [h)]
[(Helvetica) 240.0 -90.0 true true 0 (70)]
[(Helvetica) 240.0 150.0 true true 0 (-2)]
[(Helvetica) 300.0 0.0 true true 0 ( erg s)]
[(Helvetica) 240.0 150.0 true true 0 (-1)]
[(Helvetica) 300.0 0.0 true true 0 (])]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
5913 -565 M
[ [(Helvetica) 300.0 0.0 true true 0 (T [keV])]
] -100.0 MCshow
LTb
2.000 UP
1.000 UL
LTb
2.000 UP
1.000 UL
LT0
7116 6316 M
0 494 V
-31 -494 R
62 0 V
-62 494 R
62 0 V
6610 4937 M
0 501 V
-31 -501 R
62 0 V
-62 501 R
62 0 V
1007 350 R
0 413 V
-31 -413 R
62 0 V
-62 413 R
62 0 V
5491 3119 M
0 462 V
-31 -462 R
62 0 V
-62 462 R
62 0 V
2920 2430 M
0 1425 V
2889 2430 M
62 0 V
-62 1425 R
62 0 V
7167 6889 M
0 177 V
-31 -177 R
62 0 V
-62 177 R
62 0 V
9903 6264 M
0 279 V
-31 -279 R
62 0 V
-62 279 R
62 0 V
-2552 57 R
0 59 V
-31 -59 R
62 0 V
-62 59 R
62 0 V
9638 7715 M
0 293 V
-31 -293 R
62 0 V
-62 293 R
62 0 V
6793 6606 M
0 452 V
-31 -452 R
62 0 V
-62 452 R
62 0 V
5543 5810 M
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
-7 -2732 R
0 558 V
-31 -558 R
62 0 V
-62 558 R
62 0 V
2368 2403 M
0 490 V
-31 -490 R
62 0 V
-62 490 R
62 0 V
4450 4596 M
0 568 V
-31 -568 R
62 0 V
-62 568 R
62 0 V
1085 911 R
0 188 V
-31 -188 R
62 0 V
-62 188 R
62 0 V
3961 5337 M
0 272 V
-31 -272 R
62 0 V
-62 272 R
62 0 V
3430 2751 M
0 477 V
-31 -477 R
62 0 V
-62 477 R
62 0 V
-522 94 R
0 601 V
-31 -601 R
62 0 V
stroke 2970 3322 M
-62 601 R
62 0 V
7991 3122 M
0 505 V
-31 -505 R
62 0 V
-62 505 R
62 0 V
7396 6366 M
0 286 V
-31 -286 R
62 0 V
-62 286 R
62 0 V
350 99 R
0 540 V
-31 -540 R
62 0 V
-62 540 R
62 0 V
1517 1242 M
0 380 V
-31 -380 R
62 0 V
-62 380 R
62 0 V
7030 5913 M
0 1013 V
6999 5913 M
62 0 V
-62 1013 R
62 0 V
5613 3743 M
0 637 V
-31 -637 R
62 0 V
-62 637 R
62 0 V
7676 5760 M
0 580 V
-31 -580 R
62 0 V
-62 580 R
62 0 V
2959 4345 M
0 236 V
-31 -236 R
62 0 V
-62 236 R
62 0 V
6970 6581 M
289 0 V
-289 -31 R
0 62 V
289 -62 R
0 62 V
6488 5206 M
240 0 V
-240 -31 R
0 62 V
240 -62 R
0 62 V
774 770 R
287 0 V
-287 -31 R
0 62 V
287 -62 R
0 62 V
5460 3365 M
62 0 V
-62 -31 R
0 62 V
62 -62 R
0 62 V
2829 3285 M
181 0 V
-181 -31 R
0 62 V
181 -62 R
0 62 V
7095 6980 M
144 0 V
-144 -31 R
0 62 V
144 -62 R
0 62 V
9760 6409 M
283 0 V
-283 -31 R
0 62 V
283 -62 R
0 62 V
7308 6629 M
147 0 V
-147 -31 R
0 62 V
147 -62 R
0 62 V
9497 7868 M
278 0 V
-278 -31 R
0 62 V
278 -62 R
0 62 V
stroke 9775 7899 M
6668 6847 M
248 0 V
-248 -31 R
0 62 V
248 -62 R
0 62 V
5519 5833 M
47 0 V
-47 -31 R
0 62 V
47 -62 R
0 62 V
5518 3425 M
97 0 V
-97 -31 R
0 62 V
97 -62 R
0 62 V
2274 2665 M
187 0 V
-187 -31 R
0 62 V
187 -62 R
0 62 V
4406 4903 M
87 0 V
-87 -31 R
0 62 V
87 -62 R
0 62 V
5555 6172 M
22 0 V
-22 -31 R
0 62 V
22 -62 R
0 62 V
3922 5478 M
77 0 V
-77 -31 R
0 62 V
77 -62 R
0 62 V
3338 3006 M
182 0 V
-182 -31 R
0 62 V
182 -62 R
0 62 V
-630 611 R
98 0 V
-98 -31 R
0 62 V
98 -62 R
0 62 V
7882 3393 M
216 0 V
-216 -31 R
0 62 V
216 -62 R
0 62 V
7208 6515 M
369 0 V
-369 -31 R
0 62 V
369 -62 R
0 62 V
110 496 R
179 0 V
-179 -31 R
0 62 V
179 -62 R
0 62 V
1443 1442 M
147 0 V
-147 -31 R
0 62 V
147 -62 R
0 62 V
6900 6492 M
256 0 V
-256 -31 R
0 62 V
256 -62 R
0 62 V
5567 4091 M
90 0 V
-90 -31 R
0 62 V
90 -62 R
0 62 V
7502 6074 M
342 0 V
-342 -31 R
0 62 V
342 -62 R
0 62 V
2937 4467 M
44 0 V
-44 -31 R
0 62 V
44 -62 R
0 62 V
7116 6581 CircleF
6610 5206 CircleF
7648 6007 CircleF
5491 3365 CircleF
2920 3285 CircleF
7167 6980 CircleF
9903 6409 CircleF
7382 6629 CircleF
9638 7868 CircleF
6793 6847 CircleF
5543 5833 CircleF
5567 3425 CircleF
2368 2665 CircleF
4450 4903 CircleF
5566 6172 CircleF
3961 5478 CircleF
3430 3006 CircleF
2939 3648 CircleF
7991 3393 CircleF
7396 6515 CircleF
7777 7042 CircleF
1517 1442 CircleF
7030 6492 CircleF
5613 4091 CircleF
7676 6074 CircleF
2959 4467 CircleF
1.000 UL
LT0
LTb
10080 956 M
[ [(Helvetica) 300.0 0.0 true true 0 (observed relation)]
] -100.0 MRshow
LT0
10260 956 M
846 0 V
360 1103 M
112 82 V
112 82 V
113 83 V
112 82 V
112 82 V
112 82 V
112 83 V
112 82 V
113 82 V
112 82 V
112 82 V
112 83 V
112 82 V
113 82 V
112 82 V
112 83 V
112 82 V
112 82 V
112 82 V
113 82 V
112 83 V
112 82 V
112 82 V
112 82 V
113 82 V
112 83 V
112 82 V
112 82 V
112 82 V
112 83 V
113 82 V
112 82 V
112 82 V
112 82 V
112 83 V
113 82 V
112 82 V
112 82 V
112 83 V
112 82 V
112 82 V
113 82 V
112 82 V
112 83 V
112 82 V
112 82 V
113 82 V
112 83 V
112 82 V
112 82 V
112 82 V
112 82 V
113 83 V
112 82 V
112 82 V
112 82 V
112 83 V
113 82 V
112 82 V
112 82 V
112 82 V
112 83 V
112 82 V
113 82 V
112 82 V
112 83 V
112 82 V
112 82 V
113 82 V
112 82 V
112 83 V
112 82 V
112 82 V
112 82 V
113 83 V
112 82 V
112 82 V
112 82 V
112 82 V
113 83 V
112 82 V
112 82 V
112 82 V
112 82 V
112 83 V
113 82 V
112 82 V
112 82 V
112 83 V
112 82 V
16 11 V
stroke
LT3
LTb
10080 484 M
[ [(Helvetica) 300.0 0.0 true true 0 (simulated "true" relation)]
] -100.0 MRshow
LT3
10260 484 M
846 0 V
683 185 M
14 12 V
112 98 V
112 99 V
112 99 V
112 98 V
112 99 V
113 99 V
112 98 V
112 99 V
112 99 V
112 98 V
113 99 V
112 99 V
112 98 V
112 99 V
112 99 V
112 98 V
113 99 V
112 98 V
112 99 V
112 99 V
112 98 V
113 99 V
112 99 V
112 98 V
112 99 V
112 99 V
112 98 V
113 99 V
112 99 V
112 98 V
112 99 V
112 99 V
113 98 V
112 99 V
112 99 V
112 98 V
112 99 V
112 99 V
113 98 V
112 99 V
112 99 V
112 98 V
112 99 V
113 99 V
112 98 V
112 99 V
112 99 V
112 98 V
112 99 V
113 99 V
112 98 V
112 99 V
112 99 V
112 98 V
113 99 V
112 99 V
112 98 V
112 99 V
112 99 V
112 98 V
113 99 V
112 99 V
112 98 V
112 99 V
112 99 V
113 98 V
112 99 V
112 99 V
112 98 V
112 99 V
112 99 V
113 98 V
112 99 V
112 99 V
112 98 V
112 99 V
113 99 V
112 98 V
112 99 V
112 99 V
112 98 V
112 99 V
113 99 V
112 98 V
34 30 V
stroke
LTb
360 8514 N
360 185 L
11106 0 V
0 8329 V
360 8514 L
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
