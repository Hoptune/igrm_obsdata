%!PS-Adobe-2.0 EPSF-2.0
%%Title: sbps_a0160.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri Nov 26 17:07:09 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 482 446
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 5 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 20.000 def
/userlinewidth gnulinewidth def
%
/vshift -106 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sbps_a0160.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Helen Eckmiller)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov 26 17:07:09 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 320 scalefont setfont
1.000 UL
LTb
1000 640 M
189 0 V
6451 0 R
-189 0 V
stroke
808 640 M
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (-10)]
] -138.7 MRshow
1.000 UL
LTb
1000 640 M
94 0 V
6546 0 R
-94 0 V
1000 1639 M
94 0 V
6546 0 R
-94 0 V
1000 2224 M
94 0 V
6546 0 R
-94 0 V
1000 2639 M
94 0 V
6546 0 R
-94 0 V
1000 2961 M
94 0 V
6546 0 R
-94 0 V
1000 3223 M
94 0 V
6546 0 R
-94 0 V
1000 3446 M
94 0 V
6546 0 R
-94 0 V
1000 3638 M
94 0 V
6546 0 R
-94 0 V
1000 3808 M
94 0 V
6546 0 R
-94 0 V
1000 3960 M
189 0 V
6451 0 R
-189 0 V
stroke
808 3960 M
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (-9)]
] -138.7 MRshow
1.000 UL
LTb
1000 3960 M
94 0 V
6546 0 R
-94 0 V
1000 4959 M
94 0 V
6546 0 R
-94 0 V
1000 5544 M
94 0 V
6546 0 R
-94 0 V
1000 5959 M
94 0 V
6546 0 R
-94 0 V
1000 6281 M
94 0 V
6546 0 R
-94 0 V
1000 6543 M
94 0 V
6546 0 R
-94 0 V
1000 6766 M
94 0 V
6546 0 R
-94 0 V
1000 6958 M
94 0 V
6546 0 R
-94 0 V
1000 7128 M
94 0 V
6546 0 R
-94 0 V
1000 7280 M
189 0 V
6451 0 R
-189 0 V
stroke
808 7280 M
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (-8)]
] -138.7 MRshow
1.000 UL
LTb
1000 7280 M
94 0 V
6546 0 R
-94 0 V
1000 640 M
0 189 V
stroke
904 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 1)]
] -106.7 MCshow
1.000 UL
LTb
1000 640 M
0 94 V
719 -94 R
0 94 V
421 -94 R
0 94 V
299 -94 R
0 94 V
232 -94 R
0 94 V
189 -94 R
0 94 V
160 -94 R
0 94 V
138 -94 R
0 94 V
123 -94 R
0 94 V
109 -94 R
0 189 V
stroke
3294 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 10)]
] -106.7 MCshow
1.000 UL
LTb
3390 640 M
0 94 V
720 -94 R
0 94 V
420 -94 R
0 94 V
299 -94 R
0 94 V
232 -94 R
0 94 V
189 -94 R
0 94 V
160 -94 R
0 94 V
139 -94 R
0 94 V
122 -94 R
0 94 V
109 -94 R
0 189 V
stroke
5684 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 100)]
] -106.7 MCshow
1.000 UL
LTb
5780 640 M
0 94 V
720 -94 R
0 94 V
421 -94 R
0 94 V
298 -94 R
0 94 V
232 -94 R
0 94 V
189 -94 R
0 94 V
1057 7280 M
0 -94 V
420 94 R
0 -94 V
299 94 R
0 -94 V
232 94 R
0 -94 V
189 94 R
0 -94 V
160 94 R
0 -94 V
139 94 R
0 -94 V
122 94 R
0 -94 V
109 94 R
0 -189 V
stroke
2631 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 0.1)]
] -106.7 MCshow
1.000 UL
LTb
2727 7280 M
0 -94 V
720 94 R
0 -94 V
421 94 R
0 -94 V
298 94 R
0 -94 V
232 94 R
0 -94 V
189 94 R
0 -94 V
160 94 R
0 -94 V
139 94 R
0 -94 V
122 94 R
0 -94 V
109 94 R
0 -189 V
stroke
5021 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 1)]
] -106.7 MCshow
1.000 UL
LTb
5117 7280 M
0 -94 V
720 94 R
0 -94 V
421 94 R
0 -94 V
298 94 R
0 -94 V
232 94 R
0 -94 V
189 94 R
0 -94 V
160 94 R
0 -94 V
139 94 R
0 -94 V
122 94 R
0 -94 V
109 94 R
0 -189 V
stroke
7411 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 10)]
] -106.7 MCshow
1.000 UL
LTb
7507 7280 M
0 -94 V
stroke
1000 7280 N
0 -6640 V
6640 0 V
0 6640 V
-6640 0 V
Z stroke
LCb setrgbcolor
-254 3960 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 320.0 0.0 true true 0 (surface brightness [photons/cm)]
[(Helvetica) 256.0 160.0 true true 0 (2)]
[(Helvetica) 320.0 0.0 true true 0 (/s/arcsec)]
[(Helvetica) 256.0 160.0 true true 0 (2)]
[(Helvetica) 320.0 0.0 true true 0 (])]
] -138.7 MCshow
grestore
LTb
LCb setrgbcolor
4320 0 M
[ [(Helvetica) 320.0 0.0 true true 0 (r [kpc])]
] -106.7 MCshow
LTb
LCb setrgbcolor
4320 7919 M
[ [(Helvetica) 320.0 0.0 true true 0 (r [arcmin])]
] -106.7 MCshow
LTb
1.500 UP
1.000 UL
LTb
1.500 UP
1.000 UL
LT0
3956 6891 M
0 201 V
-31 -201 R
62 0 V
-62 201 R
62 0 V
850 -96 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
219 -548 R
0 224 V
-31 -224 R
62 0 V
-62 224 R
62 0 V
154 -287 R
0 202 V
-31 -202 R
62 0 V
-62 202 R
62 0 V
119 -396 R
0 192 V
-31 -192 R
62 0 V
-62 192 R
62 0 V
95 -436 R
0 196 V
-31 -196 R
62 0 V
-62 196 R
62 0 V
81 -370 R
0 204 V
-31 -204 R
62 0 V
-62 204 R
62 0 V
68 -335 R
0 185 V
-31 -185 R
62 0 V
-62 185 R
62 0 V
55 -160 R
0 197 V
-31 -197 R
62 0 V
-62 197 R
62 0 V
45 -366 R
0 189 V
-31 -189 R
62 0 V
-62 189 R
62 0 V
38 -228 R
0 203 V
-31 -203 R
62 0 V
-62 203 R
62 0 V
37 -341 R
0 200 V
-31 -200 R
62 0 V
-62 200 R
62 0 V
29 -15 R
0 202 V
-31 -202 R
62 0 V
-62 202 R
62 0 V
23 -246 R
0 194 V
-31 -194 R
62 0 V
-62 194 R
62 0 V
21 -440 R
0 197 V
-31 -197 R
62 0 V
-62 197 R
62 0 V
23 -184 R
0 207 V
-31 -207 R
62 0 V
-62 207 R
62 0 V
20 -292 R
0 204 V
-31 -204 R
62 0 V
-62 204 R
62 0 V
17 -345 R
0 210 V
-31 -210 R
6408 5181 L
-62 210 R
62 0 V
19 -393 R
0 225 V
-31 -225 R
62 0 V
-62 225 R
62 0 V
18 -447 R
0 213 V
-31 -213 R
62 0 V
-62 213 R
62 0 V
17 -219 R
0 212 V
-31 -212 R
62 0 V
-62 212 R
62 0 V
16 -285 R
0 222 V
-31 -222 R
62 0 V
-62 222 R
62 0 V
20 -507 R
0 236 V
-31 -236 R
62 0 V
-62 236 R
62 0 V
22 -467 R
0 244 V
-31 -244 R
62 0 V
-62 244 R
62 0 V
18 -282 R
0 244 V
-31 -244 R
62 0 V
-62 244 R
62 0 V
14 -160 R
0 245 V
-31 -245 R
62 0 V
-62 245 R
62 0 V
13 -340 R
0 242 V
-31 -242 R
62 0 V
-62 242 R
62 0 V
17 -401 R
0 249 V
-31 -249 R
62 0 V
-62 249 R
62 0 V
14 -267 R
0 255 V
-31 -255 R
62 0 V
-62 255 R
62 0 V
12 -402 R
0 267 V
-31 -267 R
62 0 V
-62 267 R
62 0 V
16 -335 R
0 267 V
-31 -267 R
62 0 V
-62 267 R
62 0 V
13 -385 R
0 284 V
-31 -284 R
62 0 V
-62 284 R
62 0 V
14 -394 R
0 284 V
-31 -284 R
62 0 V
-62 284 R
62 0 V
15 -356 R
0 294 V
-31 -294 R
62 0 V
-62 294 R
62 0 V
14 -362 R
0 299 V
-31 -299 R
62 0 V
-62 299 R
62 0 V
15 -688 R
7222 3312 L
-31 -329 R
62 0 V
-62 329 R
62 0 V
15 -311 R
0 330 V
-31 -330 R
62 0 V
-62 330 R
62 0 V
19 -610 R
0 366 V
-31 -366 R
62 0 V
-62 366 R
62 0 V
48 -562 R
0 434 V
-31 -434 R
62 0 V
-62 434 R
62 0 V
1000 6995 M
3676 0 V
1000 6964 M
0 62 V
3676 -62 R
0 62 V
0 62 R
301 0 V
-301 -31 R
0 62 V
301 -62 R
0 62 V
0 -377 R
210 0 V
-210 -31 R
0 62 V
210 -62 R
0 62 V
0 -105 R
164 0 V
-164 -31 R
0 62 V
164 -62 R
0 62 V
0 -231 R
137 0 V
-137 -31 R
0 62 V
137 -62 R
0 62 V
0 -273 R
117 0 V
-117 -31 R
0 62 V
117 -62 R
0 62 V
0 -200 R
108 0 V
-108 -31 R
0 62 V
108 -62 R
0 62 V
0 -173 R
91 0 V
-91 -31 R
0 62 V
91 -62 R
0 62 V
0 1 R
81 0 V
-81 -31 R
0 62 V
81 -62 R
0 62 V
0 -204 R
70 0 V
-70 -31 R
0 62 V
70 -62 R
0 62 V
0 -63 R
69 0 V
-69 -31 R
0 62 V
69 -62 R
0 62 V
0 -170 R
66 0 V
-66 -31 R
0 62 V
66 -62 R
0 62 V
0 155 R
56 0 V
-56 -31 R
0 62 V
56 -62 R
0 62 V
0 -79 R
51 0 V
-51 -31 R
0 62 V
51 -62 R
6197 5772 L
0 -276 R
53 0 V
-53 -31 R
0 62 V
53 -62 R
0 62 V
0 -13 R
55 0 V
-55 -31 R
0 62 V
55 -62 R
0 62 V
0 -117 R
48 0 V
-48 -31 R
0 62 V
48 -62 R
0 62 V
0 -169 R
48 0 V
-48 -31 R
0 62 V
48 -62 R
0 62 V
0 -206 R
51 0 V
-51 -31 R
0 62 V
51 -62 R
0 62 V
0 -260 R
48 0 V
-48 -31 R
0 62 V
48 -62 R
0 62 V
0 -37 R
47 0 V
-47 -31 R
0 62 V
47 -62 R
0 62 V
0 -99 R
48 0 V
-48 -31 R
0 62 V
48 -62 R
0 62 V
0 -308 R
53 0 V
-53 -31 R
0 62 V
53 -62 R
0 62 V
0 -258 R
53 0 V
-53 -31 R
0 62 V
53 -62 R
0 62 V
0 -69 R
45 0 V
-45 -31 R
0 62 V
45 -62 R
0 62 V
0 54 R
45 0 V
-45 -31 R
0 62 V
45 -62 R
0 62 V
0 -128 R
45 0 V
-45 -31 R
0 62 V
45 -62 R
0 62 V
0 -186 R
49 0 V
-49 -31 R
0 62 V
49 -62 R
0 62 V
0 -46 R
41 0 V
-41 -31 R
0 62 V
41 -62 R
0 62 V
0 -172 R
46 0 V
-46 -31 R
0 62 V
46 -62 R
0 62 V
0 -98 R
47 0 V
-47 -31 R
0 62 V
47 -62 R
0 62 V
0 -140 R
42 0 V
-42 -31 R
7019 3802 L
42 -62 R
0 62 V
0 -141 R
47 0 V
-47 -31 R
0 62 V
47 -62 R
0 62 V
0 -97 R
46 0 V
-46 -31 R
0 62 V
46 -62 R
0 62 V
0 -97 R
44 0 V
-44 -31 R
0 62 V
44 -62 R
0 62 V
0 -403 R
46 0 V
-46 -31 R
0 62 V
46 -62 R
0 62 V
0 -13 R
48 0 V
-48 -31 R
0 62 V
48 -62 R
0 62 V
0 -290 R
53 0 V
-53 -31 R
0 62 V
53 -62 R
0 62 V
0 -189 R
101 0 V
-101 -31 R
0 62 V
101 -62 R
0 62 V
3956 6995 CircleF
4837 7088 CircleF
5087 6742 CircleF
5272 6668 CircleF
5422 6468 CircleF
5548 6226 CircleF
5660 6057 CircleF
5759 5915 CircleF
5845 5947 CircleF
5921 5774 CircleF
5990 5742 CircleF
6058 5603 CircleF
6118 5789 CircleF
6172 5741 CircleF
6224 5496 CircleF
6278 5514 CircleF
6329 5428 CircleF
6377 5290 CircleF
6427 5115 CircleF
6476 4886 CircleF
6524 4880 CircleF
6571 4812 CircleF
6622 4535 CircleF
6675 4308 CircleF
6724 4270 CircleF
6769 4355 CircleF
6813 4258 CircleF
6861 4103 CircleF
6906 4088 CircleF
6949 3947 CircleF
6996 3880 CircleF
7040 3771 CircleF
7085 3661 CircleF
7131 3595 CircleF
7176 3529 CircleF
7222 3157 CircleF
7268 3175 CircleF
7318 2916 CircleF
7397 2758 CircleF
1.000 UL
LT2
1000 7186 M
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
68 0 V
67 -1 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 -1 V
67 0 V
67 0 V
67 0 V
67 -1 V
67 0 V
67 -1 V
68 0 V
67 -1 V
67 -1 V
67 0 V
67 -1 V
67 -1 V
67 -1 V
67 -2 V
67 -1 V
67 -2 V
67 -2 V
67 -2 V
67 -3 V
67 -2 V
68 -4 V
67 -3 V
67 -4 V
67 -5 V
67 -5 V
67 -6 V
67 -7 V
67 -7 V
67 -9 V
67 -9 V
67 -11 V
67 -12 V
67 -13 V
67 -15 V
68 -17 V
67 -18 V
67 -21 V
67 -22 V
67 -25 V
67 -28 V
67 -30 V
67 -33 V
67 -35 V
67 -39 V
67 -41 V
67 -45 V
67 -48 V
67 -51 V
68 -54 V
67 -58 V
67 -60 V
67 -65 V
67 -67 V
67 -71 V
67 -74 V
67 -78 V
67 -82 V
67 -86 V
67 -90 V
67 -94 V
67 -98 V
67 -104 V
68 -108 V
67 -114 V
67 -119 V
67 -124 V
67 -130 V
67 -135 V
67 -141 V
67 -146 V
67 -151 V
67 -154 V
67 -159 V
67 -161 V
67 -164 V
67 -165 V
68 -165 V
67 -166 V
67 -165 V
67 -163 V
67 -162 V
67 -160 V
67 -157 V
67 -155 V
stroke
LTb
1000 7280 N
0 -6640 V
6640 0 V
0 6640 V
-6640 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
