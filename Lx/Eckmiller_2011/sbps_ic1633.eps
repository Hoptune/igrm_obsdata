%!PS-Adobe-2.0 EPSF-2.0
%%Title: sbps_ic1633.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri Nov 26 17:07:09 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 482 446
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 5 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 20.000 def
/userlinewidth gnulinewidth def
%
/vshift -106 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sbps_ic1633.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Helen Eckmiller)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov 26 17:07:09 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 320 scalefont setfont
1.000 UL
LTb
1000 640 M
94 0 V
6546 0 R
-94 0 V
1000 902 M
94 0 V
6546 0 R
-94 0 V
1000 1128 M
94 0 V
6546 0 R
-94 0 V
1000 1328 M
94 0 V
6546 0 R
-94 0 V
1000 1507 M
189 0 V
6451 0 R
-189 0 V
stroke
808 1507 M
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (-9)]
] -138.7 MRshow
1.000 UL
LTb
1000 1507 M
94 0 V
6546 0 R
-94 0 V
1000 2684 M
94 0 V
6546 0 R
-94 0 V
1000 3372 M
94 0 V
6546 0 R
-94 0 V
1000 3860 M
94 0 V
6546 0 R
-94 0 V
1000 4239 M
94 0 V
6546 0 R
-94 0 V
1000 4548 M
94 0 V
6546 0 R
-94 0 V
1000 4810 M
94 0 V
6546 0 R
-94 0 V
1000 5037 M
94 0 V
6546 0 R
-94 0 V
1000 5236 M
94 0 V
6546 0 R
-94 0 V
1000 5415 M
189 0 V
6451 0 R
-189 0 V
stroke
808 5415 M
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (-8)]
] -138.7 MRshow
1.000 UL
LTb
1000 5415 M
94 0 V
6546 0 R
-94 0 V
1000 6592 M
94 0 V
6546 0 R
-94 0 V
1000 7280 M
94 0 V
6546 0 R
-94 0 V
1000 640 M
0 189 V
stroke
904 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 1)]
] -106.7 MCshow
1.000 UL
LTb
1000 640 M
0 94 V
741 -94 R
0 94 V
433 -94 R
0 94 V
307 -94 R
0 94 V
239 -94 R
0 94 V
194 -94 R
0 94 V
165 -94 R
0 94 V
143 -94 R
0 94 V
126 -94 R
0 94 V
112 -94 R
0 189 V
stroke
3364 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 10)]
] -106.7 MCshow
1.000 UL
LTb
3460 640 M
0 94 V
741 -94 R
0 94 V
433 -94 R
0 94 V
307 -94 R
0 94 V
239 -94 R
0 94 V
195 -94 R
0 94 V
164 -94 R
0 94 V
143 -94 R
0 94 V
126 -94 R
0 94 V
112 -94 R
0 189 V
stroke
5824 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 100)]
] -106.7 MCshow
1.000 UL
LTb
5920 640 M
0 94 V
741 -94 R
0 94 V
433 -94 R
0 94 V
308 -94 R
0 94 V
238 -94 R
0 94 V
1191 7280 M
0 -94 V
238 94 R
0 -94 V
195 94 R
0 -94 V
164 94 R
0 -94 V
143 94 R
0 -94 V
126 94 R
0 -94 V
113 94 R
0 -189 V
stroke
2074 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 0.1)]
] -106.7 MCshow
1.000 UL
LTb
2170 7280 M
0 -94 V
740 94 R
0 -94 V
433 94 R
0 -94 V
308 94 R
0 -94 V
238 94 R
0 -94 V
195 94 R
0 -94 V
165 94 R
0 -94 V
142 94 R
0 -94 V
126 94 R
0 -94 V
113 94 R
0 -189 V
stroke
4534 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 1)]
] -106.7 MCshow
1.000 UL
LTb
4630 7280 M
0 -94 V
740 94 R
0 -94 V
434 94 R
0 -94 V
307 94 R
0 -94 V
238 94 R
0 -94 V
195 94 R
0 -94 V
165 94 R
0 -94 V
142 94 R
0 -94 V
126 94 R
0 -94 V
113 94 R
0 -189 V
stroke
6994 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 10)]
] -106.7 MCshow
1.000 UL
LTb
7090 7280 M
0 -94 V
stroke
1000 7280 N
0 -6640 V
6640 0 V
0 6640 V
-6640 0 V
Z stroke
LCb setrgbcolor
-62 3960 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 320.0 0.0 true true 0 (surface brightness [photons/cm)]
[(Helvetica) 256.0 160.0 true true 0 (2)]
[(Helvetica) 320.0 0.0 true true 0 (/s/arcsec)]
[(Helvetica) 256.0 160.0 true true 0 (2)]
[(Helvetica) 320.0 0.0 true true 0 (])]
] -138.7 MCshow
grestore
LTb
LCb setrgbcolor
4320 0 M
[ [(Helvetica) 320.0 0.0 true true 0 (r [kpc])]
] -106.7 MCshow
LTb
LCb setrgbcolor
4320 7919 M
[ [(Helvetica) 320.0 0.0 true true 0 (r [arcmin])]
] -106.7 MCshow
LTb
1.500 UP
1.000 UL
LTb
1.500 UP
1.000 UL
LT0
3801 4869 M
0 209 V
-31 -209 R
62 0 V
-62 209 R
62 0 V
897 -277 R
0 211 V
-31 -211 R
62 0 V
-62 211 R
62 0 V
194 705 R
0 201 V
-31 -201 R
62 0 V
-62 201 R
62 0 V
63 624 R
0 193 V
-31 -193 R
62 0 V
-62 193 R
62 0 V
38 -687 R
0 214 V
-31 -214 R
62 0 V
-62 214 R
62 0 V
71 -1354 R
0 214 V
-31 -214 R
62 0 V
-62 214 R
62 0 V
90 -373 R
0 230 V
-31 -230 R
62 0 V
-62 230 R
62 0 V
84 -300 R
0 238 V
-31 -238 R
62 0 V
-62 238 R
62 0 V
73 -489 R
0 216 V
-31 -216 R
62 0 V
-62 216 R
62 0 V
64 -399 R
0 245 V
-31 -245 R
62 0 V
-62 245 R
62 0 V
54 -375 R
0 221 V
-31 -221 R
62 0 V
-62 221 R
62 0 V
44 -182 R
0 235 V
-31 -235 R
62 0 V
-62 235 R
62 0 V
38 -486 R
0 220 V
-31 -220 R
62 0 V
-62 220 R
62 0 V
32 -167 R
0 224 V
-31 -224 R
62 0 V
-62 224 R
62 0 V
27 -85 R
0 231 V
-31 -231 R
62 0 V
-62 231 R
62 0 V
23 -516 R
0 224 V
-31 -224 R
62 0 V
-62 224 R
62 0 V
23 -380 R
0 243 V
-31 -243 R
62 0 V
-62 243 R
62 0 V
19 -265 R
0 236 V
-31 -236 R
6193 3632 L
-62 236 R
62 0 V
18 -499 R
0 233 V
-31 -233 R
62 0 V
-62 233 R
62 0 V
16 63 R
0 230 V
-31 -230 R
62 0 V
-62 230 R
62 0 V
15 -631 R
0 243 V
-31 -243 R
62 0 V
-62 243 R
62 0 V
15 -32 R
0 243 V
-31 -243 R
62 0 V
-62 243 R
62 0 V
11 -446 R
0 254 V
-31 -254 R
62 0 V
-62 254 R
62 0 V
10 -253 R
0 244 V
-31 -244 R
62 0 V
-62 244 R
62 0 V
6 -128 R
0 247 V
-31 -247 R
62 0 V
-62 247 R
62 0 V
8 -763 R
0 261 V
-31 -261 R
62 0 V
-62 261 R
62 0 V
6 141 R
0 251 V
-31 -251 R
62 0 V
-62 251 R
62 0 V
3 -446 R
0 260 V
-31 -260 R
62 0 V
-62 260 R
62 0 V
3 -379 R
0 261 V
-31 -261 R
62 0 V
-62 261 R
62 0 V
6 -608 R
0 267 V
-31 -267 R
62 0 V
-62 267 R
62 0 V
5 11 R
0 269 V
-31 -269 R
62 0 V
-62 269 R
62 0 V
7 -675 R
0 290 V
-31 -290 R
62 0 V
-62 290 R
62 0 V
8 -164 R
0 277 V
-31 -277 R
62 0 V
-62 277 R
62 0 V
7 -373 R
0 275 V
-31 -275 R
62 0 V
-62 275 R
62 0 V
8 -614 R
0 305 V
-31 -305 R
62 0 V
-62 305 R
62 0 V
10 -110 R
6882 2657 L
-31 -285 R
62 0 V
-62 285 R
62 0 V
17 -706 R
0 363 V
-31 -363 R
62 0 V
-62 363 R
62 0 V
31 -800 R
0 349 V
-31 -349 R
62 0 V
-62 349 R
62 0 V
57 -870 R
0 366 V
7049 993 M
62 0 V
-62 366 R
62 0 V
1000 4977 M
3542 0 V
1000 4946 M
0 62 V
3542 -62 R
0 62 V
0 -98 R
346 0 V
-346 -31 R
0 62 V
346 -62 R
0 62 V
0 879 R
129 0 V
-129 -31 R
0 62 V
129 -62 R
0 62 V
0 791 R
62 0 V
-62 -31 R
0 62 V
62 -62 R
0 62 V
0 -515 R
76 0 V
-76 -31 R
0 62 V
76 -62 R
0 62 V
0 -1171 R
124 0 V
-124 -31 R
0 62 V
124 -62 R
0 62 V
0 -181 R
119 0 V
-119 -31 R
0 62 V
119 -62 R
0 62 V
0 -97 R
111 0 V
-111 -31 R
0 62 V
111 -62 R
0 62 V
0 -294 R
98 0 V
-98 -31 R
0 62 V
98 -62 R
0 62 V
0 -198 R
92 0 V
-92 -31 R
0 62 V
92 -62 R
0 62 V
0 -174 R
79 0 V
-79 -31 R
0 62 V
79 -62 R
0 62 V
0 15 R
71 0 V
-71 -31 R
0 62 V
71 -62 R
0 62 V
0 -289 R
66 0 V
-66 -31 R
0 62 V
66 -62 R
0 62 V
0 23 R
62 0 V
-62 -31 R
0 62 V
62 -62 R
5977 4102 L
0 113 R
54 0 V
-54 -31 R
0 62 V
54 -62 R
0 62 V
0 -320 R
55 0 V
-55 -31 R
0 62 V
55 -62 R
0 62 V
0 -177 R
52 0 V
-52 -31 R
0 62 V
52 -62 R
0 62 V
0 -57 R
48 0 V
-48 -31 R
0 62 V
48 -62 R
0 62 V
0 -296 R
50 0 V
-50 -31 R
0 62 V
50 -62 R
0 62 V
0 264 R
43 0 V
-43 -31 R
0 62 V
43 -62 R
0 62 V
0 -425 R
49 0 V
-49 -31 R
0 62 V
49 -62 R
0 62 V
0 180 R
43 0 V
-43 -31 R
0 62 V
43 -62 R
0 62 V
0 -228 R
42 0 V
-42 -31 R
0 62 V
42 -62 R
0 62 V
0 -36 R
39 0 V
-39 -31 R
0 62 V
39 -62 R
0 62 V
0 87 R
36 0 V
-36 -31 R
0 62 V
36 -62 R
0 62 V
0 -540 R
41 0 V
-41 -31 R
0 62 V
41 -62 R
0 62 V
0 366 R
34 0 V
-34 -31 R
0 62 V
34 -62 R
0 62 V
0 -221 R
33 0 V
-33 -31 R
0 62 V
33 -62 R
0 62 V
0 -149 R
35 0 V
-35 -31 R
0 62 V
35 -62 R
0 62 V
0 -375 R
39 0 V
-39 -31 R
0 62 V
39 -62 R
0 62 V
0 248 R
35 0 V
-35 -31 R
0 62 V
35 -62 R
0 62 V
0 -426 R
39 0 V
-39 -31 R
6705 2668 L
39 -62 R
0 62 V
0 88 R
39 0 V
-39 -31 R
0 62 V
39 -62 R
0 62 V
0 -128 R
38 0 V
-38 -31 R
0 62 V
38 -62 R
0 62 V
0 -354 R
40 0 V
-40 -31 R
0 62 V
40 -62 R
0 62 V
0 153 R
41 0 V
-41 -31 R
0 62 V
41 -62 R
0 62 V
0 -409 R
56 0 V
-56 -31 R
0 62 V
56 -62 R
0 62 V
0 -475 R
67 0 V
-67 -31 R
0 62 V
67 -62 R
0 62 V
0 -543 R
106 0 V
-106 -31 R
0 62 V
106 -62 R
0 62 V
3801 4977 CircleF
4729 4910 CircleF
4954 5820 CircleF
5048 6642 CircleF
5117 6158 CircleF
5219 5018 CircleF
5340 4868 CircleF
5455 4802 CircleF
5559 4539 CircleF
5654 4372 CircleF
5739 4229 CircleF
5814 4275 CircleF
5883 4017 CircleF
5946 4071 CircleF
6004 4215 CircleF
6058 3926 CircleF
6112 3780 CircleF
6162 3754 CircleF
6211 3489 CircleF
6258 3784 CircleF
6304 3390 CircleF
6350 3601 CircleF
6392 3404 CircleF
6433 3399 CircleF
6470 3517 CircleF
6509 3008 CircleF
6546 3405 CircleF
6580 3215 CircleF
6614 3097 CircleF
6651 2753 CircleF
6687 3032 CircleF
6725 2637 CircleF
6764 2756 CircleF
6802 2659 CircleF
6841 2336 CircleF
6882 2520 CircleF
6930 2142 CircleF
6992 1698 CircleF
7080 1186 CircleF
1.000 UL
LT2
1000 5370 M
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
68 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 -1 V
67 0 V
67 0 V
67 0 V
67 0 V
67 -1 V
67 0 V
67 0 V
68 -1 V
67 0 V
67 -1 V
67 0 V
67 -1 V
67 0 V
67 -1 V
67 -1 V
67 -1 V
67 -1 V
67 -2 V
67 -1 V
67 -2 V
67 -2 V
68 -2 V
67 -3 V
67 -2 V
67 -3 V
67 -4 V
67 -4 V
67 -5 V
67 -5 V
67 -6 V
67 -6 V
67 -7 V
67 -9 V
67 -9 V
67 -11 V
68 -11 V
67 -14 V
67 -15 V
67 -16 V
67 -19 V
67 -20 V
67 -23 V
67 -26 V
67 -28 V
67 -31 V
67 -35 V
67 -37 V
67 -42 V
67 -45 V
68 -49 V
67 -54 V
67 -57 V
67 -62 V
67 -67 V
67 -71 V
67 -75 V
67 -80 V
67 -85 V
67 -90 V
67 -94 V
67 -99 V
67 -105 V
67 -109 V
68 -114 V
67 -121 V
67 -126 V
67 -133 V
67 -139 V
67 -147 V
67 -155 V
67 -164 V
67 -172 V
67 -182 V
67 -192 V
67 -202 V
67 -212 V
67 -223 V
68 -233 V
67 -244 V
67 -254 V
42 -166 V
stroke
LTb
1000 7280 N
0 -6640 V
6640 0 V
0 6640 V
-6640 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
