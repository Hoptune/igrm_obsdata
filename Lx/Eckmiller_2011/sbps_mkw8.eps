%!PS-Adobe-2.0 EPSF-2.0
%%Title: sbps_mkw8.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri Nov 26 17:07:10 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 482 446
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 5 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 20.000 def
/userlinewidth gnulinewidth def
%
/vshift -106 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sbps_mkw8.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Helen Eckmiller)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov 26 17:07:10 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 320 scalefont setfont
1.000 UL
LTb
1000 640 M
189 0 V
6451 0 R
-189 0 V
stroke
808 640 M
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (-9)]
] -138.7 MRshow
1.000 UL
LTb
1000 640 M
94 0 V
6546 0 R
-94 0 V
1000 1993 M
94 0 V
6546 0 R
-94 0 V
1000 2785 M
94 0 V
6546 0 R
-94 0 V
1000 3346 M
94 0 V
6546 0 R
-94 0 V
1000 3782 M
94 0 V
6546 0 R
-94 0 V
1000 4138 M
94 0 V
6546 0 R
-94 0 V
1000 4439 M
94 0 V
6546 0 R
-94 0 V
1000 4700 M
94 0 V
6546 0 R
-94 0 V
1000 4930 M
94 0 V
6546 0 R
-94 0 V
1000 5135 M
189 0 V
6451 0 R
-189 0 V
stroke
808 5135 M
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (-8)]
] -138.7 MRshow
1.000 UL
LTb
1000 5135 M
94 0 V
6546 0 R
-94 0 V
1000 6488 M
94 0 V
6546 0 R
-94 0 V
1000 7280 M
94 0 V
6546 0 R
-94 0 V
1000 640 M
0 189 V
stroke
904 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 1)]
] -106.7 MCshow
1.000 UL
LTb
1000 640 M
0 94 V
741 -94 R
0 94 V
433 -94 R
0 94 V
307 -94 R
0 94 V
239 -94 R
0 94 V
194 -94 R
0 94 V
165 -94 R
0 94 V
143 -94 R
0 94 V
126 -94 R
0 94 V
112 -94 R
0 189 V
stroke
3364 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 10)]
] -106.7 MCshow
1.000 UL
LTb
3460 640 M
0 94 V
741 -94 R
0 94 V
433 -94 R
0 94 V
307 -94 R
0 94 V
239 -94 R
0 94 V
195 -94 R
0 94 V
164 -94 R
0 94 V
143 -94 R
0 94 V
126 -94 R
0 94 V
112 -94 R
0 189 V
stroke
5824 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 100)]
] -106.7 MCshow
1.000 UL
LTb
5920 640 M
0 94 V
741 -94 R
0 94 V
433 -94 R
0 94 V
308 -94 R
0 94 V
238 -94 R
0 94 V
976 7280 M
0 -94 V
307 94 R
0 -94 V
238 94 R
0 -94 V
195 94 R
0 -94 V
165 94 R
0 -94 V
143 94 R
0 -94 V
125 94 R
0 -94 V
113 94 R
0 -189 V
stroke
2166 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 0.1)]
] -106.7 MCshow
1.000 UL
LTb
2262 7280 M
0 -94 V
741 94 R
0 -94 V
433 94 R
0 -94 V
307 94 R
0 -94 V
239 94 R
0 -94 V
194 94 R
0 -94 V
165 94 R
0 -94 V
143 94 R
0 -94 V
126 94 R
0 -94 V
112 94 R
0 -189 V
stroke
4626 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 1)]
] -106.7 MCshow
1.000 UL
LTb
4722 7280 M
0 -94 V
741 94 R
0 -94 V
433 94 R
0 -94 V
307 94 R
0 -94 V
239 94 R
0 -94 V
195 94 R
0 -94 V
164 94 R
0 -94 V
143 94 R
0 -94 V
126 94 R
0 -94 V
112 94 R
0 -189 V
stroke
7086 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 10)]
] -106.7 MCshow
1.000 UL
LTb
7182 7280 M
0 -94 V
stroke
1000 7280 N
0 -6640 V
6640 0 V
0 6640 V
-6640 0 V
Z stroke
LCb setrgbcolor
-62 3960 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 320.0 0.0 true true 0 (surface brightness [photons/cm)]
[(Helvetica) 256.0 160.0 true true 0 (2)]
[(Helvetica) 320.0 0.0 true true 0 (/s/arcsec)]
[(Helvetica) 256.0 160.0 true true 0 (2)]
[(Helvetica) 320.0 0.0 true true 0 (])]
] -138.7 MCshow
grestore
LTb
LCb setrgbcolor
4320 0 M
[ [(Helvetica) 320.0 0.0 true true 0 (r [kpc])]
] -106.7 MCshow
LTb
LCb setrgbcolor
4320 7919 M
[ [(Helvetica) 320.0 0.0 true true 0 (r [arcmin])]
] -106.7 MCshow
LTb
1.500 UP
1.000 UL
LTb
1.500 UP
1.000 UL
LT0
3391 6024 M
0 236 V
-31 -236 R
62 0 V
-62 236 R
62 0 V
924 -364 R
0 234 V
-31 -234 R
62 0 V
-62 234 R
62 0 V
277 -548 R
0 231 V
-31 -231 R
62 0 V
-62 231 R
62 0 V
173 57 R
0 242 V
-31 -242 R
62 0 V
-62 242 R
62 0 V
125 100 R
0 269 V
-31 -269 R
62 0 V
-62 269 R
62 0 V
111 -994 R
0 258 V
-31 -258 R
62 0 V
-62 258 R
62 0 V
93 -501 R
0 237 V
-31 -237 R
62 0 V
-62 237 R
62 0 V
74 -377 R
0 256 V
-31 -256 R
62 0 V
-62 256 R
62 0 V
65 -458 R
0 255 V
-31 -255 R
62 0 V
-62 255 R
62 0 V
55 -277 R
0 247 V
-31 -247 R
62 0 V
-62 247 R
62 0 V
45 -631 R
0 235 V
-31 -235 R
62 0 V
-62 235 R
62 0 V
39 -242 R
0 248 V
-31 -248 R
62 0 V
-62 248 R
62 0 V
34 -396 R
0 256 V
-31 -256 R
62 0 V
-62 256 R
62 0 V
27 194 R
0 260 V
-31 -260 R
62 0 V
-62 260 R
62 0 V
23 -673 R
0 254 V
-31 -254 R
62 0 V
-62 254 R
62 0 V
22 -309 R
0 256 V
-31 -256 R
62 0 V
-62 256 R
62 0 V
19 -515 R
0 249 V
-31 -249 R
62 0 V
-62 249 R
62 0 V
16 -183 R
0 257 V
-31 -257 R
6071 4130 L
-62 257 R
62 0 V
14 -397 R
0 260 V
-31 -260 R
62 0 V
-62 260 R
62 0 V
12 -286 R
0 261 V
-31 -261 R
62 0 V
-62 261 R
62 0 V
9 -157 R
0 258 V
-31 -258 R
62 0 V
-62 258 R
62 0 V
7 -477 R
0 254 V
-31 -254 R
62 0 V
-62 254 R
62 0 V
8 -507 R
0 266 V
-31 -266 R
62 0 V
-62 266 R
62 0 V
8 -166 R
0 350 V
-31 -350 R
62 0 V
-62 350 R
62 0 V
5 -486 R
0 263 V
-31 -263 R
62 0 V
-62 263 R
62 0 V
5 -354 R
0 284 V
-31 -284 R
62 0 V
-62 284 R
62 0 V
5 -168 R
0 274 V
-31 -274 R
62 0 V
-62 274 R
62 0 V
6 -563 R
0 266 V
-31 -266 R
62 0 V
-62 266 R
62 0 V
4 -501 R
0 268 V
-31 -268 R
62 0 V
-62 268 R
62 0 V
5 -240 R
0 291 V
-31 -291 R
62 0 V
-62 291 R
62 0 V
3 -534 R
0 271 V
-31 -271 R
62 0 V
-62 271 R
62 0 V
3 -123 R
0 291 V
-31 -291 R
62 0 V
-62 291 R
62 0 V
2 -194 R
0 284 V
-31 -284 R
62 0 V
-62 284 R
62 0 V
0 -498 R
0 283 V
-31 -283 R
62 0 V
-62 283 R
62 0 V
0 -392 R
0 299 V
-31 -299 R
62 0 V
-62 299 R
62 0 V
2 -413 R
6696 2956 L
-31 -302 R
62 0 V
-62 302 R
62 0 V
1 -541 R
0 290 V
-31 -290 R
62 0 V
-62 290 R
62 0 V
-1 -393 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
-2 -281 R
0 299 V
-31 -299 R
62 0 V
-62 299 R
62 0 V
2 -386 R
0 308 V
-31 -308 R
62 0 V
-62 308 R
62 0 V
7 -759 R
0 317 V
-31 -317 R
62 0 V
-62 317 R
62 0 V
11 -387 R
0 321 V
-31 -321 R
62 0 V
-62 321 R
62 0 V
14 -385 R
0 332 V
-31 -332 R
62 0 V
-62 332 R
62 0 V
17 -505 R
0 343 V
-31 -343 R
62 0 V
-62 343 R
62 0 V
21 -569 R
0 352 V
-31 -352 R
62 0 V
-62 352 R
62 0 V
25 -285 R
0 355 V
-31 -355 R
62 0 V
-62 355 R
62 0 V
37 -803 R
0 373 V
7138 894 M
62 0 V
-62 373 R
62 0 V
1000 6145 M
3132 0 V
1000 6114 M
0 62 V
3132 -62 R
0 62 V
0 -160 R
392 0 V
-392 -31 R
0 62 V
392 -62 R
0 62 V
0 -346 R
246 0 V
-246 -31 R
0 62 V
246 -62 R
0 62 V
0 263 R
169 0 V
-169 -31 R
0 62 V
169 -62 R
0 62 V
0 325 R
146 0 V
-146 -31 R
0 62 V
146 -62 R
0 62 V
0 -761 R
138 0 V
-138 -31 R
0 62 V
138 -62 R
5223 5652 L
0 -286 R
112 0 V
-112 -31 R
0 62 V
112 -62 R
0 62 V
0 -161 R
97 0 V
-97 -31 R
0 62 V
97 -62 R
0 62 V
0 -234 R
96 0 V
-96 -31 R
0 62 V
96 -62 R
0 62 V
0 -56 R
76 0 V
-76 -31 R
0 62 V
76 -62 R
0 62 V
0 -422 R
75 0 V
-75 -31 R
0 62 V
75 -62 R
0 62 V
0 -31 R
67 0 V
-67 -31 R
0 62 V
67 -62 R
0 62 V
0 -175 R
63 0 V
-63 -31 R
0 62 V
63 -62 R
0 62 V
0 421 R
53 0 V
-53 -31 R
0 62 V
53 -62 R
0 62 V
0 -447 R
55 0 V
-55 -31 R
0 62 V
55 -62 R
0 62 V
0 -85 R
52 0 V
-52 -31 R
0 62 V
52 -62 R
0 62 V
0 -293 R
48 0 V
-48 -31 R
0 62 V
48 -62 R
0 62 V
0 39 R
46 0 V
-46 -31 R
0 62 V
46 -62 R
0 62 V
0 -170 R
44 0 V
-44 -31 R
0 62 V
44 -62 R
0 62 V
0 -56 R
41 0 V
-41 -31 R
0 62 V
41 -62 R
0 62 V
0 71 R
39 0 V
-39 -31 R
0 62 V
39 -62 R
0 62 V
0 -252 R
37 0 V
-37 -31 R
0 62 V
37 -62 R
0 62 V
0 -277 R
42 0 V
-42 -31 R
0 62 V
42 -62 R
0 62 V
0 114 R
37 0 V
-37 -31 R
6266 3910 L
37 -62 R
0 62 V
0 -214 R
35 0 V
-35 -31 R
0 62 V
35 -62 R
0 62 V
0 -111 R
36 0 V
-36 -31 R
0 62 V
36 -62 R
0 62 V
0 80 R
37 0 V
-37 -31 R
0 62 V
37 -62 R
0 62 V
0 -324 R
35 0 V
-35 -31 R
0 62 V
35 -62 R
0 62 V
0 -265 R
36 0 V
-36 -31 R
0 62 V
36 -62 R
0 62 V
0 9 R
35 0 V
-35 -31 R
0 62 V
35 -62 R
0 62 V
0 -285 R
34 0 V
-34 -31 R
0 62 V
34 -62 R
0 62 V
0 128 R
34 0 V
-34 -31 R
0 62 V
34 -62 R
0 62 V
0 62 R
31 0 V
-31 -31 R
0 62 V
31 -62 R
0 62 V
0 -245 R
31 0 V
-31 -31 R
0 62 V
31 -62 R
0 62 V
0 -132 R
32 0 V
-32 -31 R
0 62 V
32 -62 R
0 62 V
0 -143 R
33 0 V
-33 -31 R
0 62 V
33 -62 R
0 62 V
0 -277 R
31 0 V
-31 -31 R
0 62 V
31 -62 R
0 62 V
0 -120 R
30 0 V
-30 -31 R
0 62 V
30 -62 R
0 62 V
0 -6 R
28 0 V
-28 -31 R
0 62 V
28 -62 R
0 62 V
0 -113 R
37 0 V
-37 -31 R
0 62 V
37 -62 R
0 62 V
0 -477 R
39 0 V
-39 -31 R
0 62 V
39 -62 R
0 62 V
0 -99 R
6922 1905 L
-45 -31 R
0 62 V
45 -62 R
0 62 V
0 -89 R
46 0 V
-46 -31 R
0 62 V
46 -62 R
0 62 V
0 -198 R
49 0 V
-49 -31 R
0 62 V
49 -62 R
0 62 V
0 -252 R
55 0 V
-55 -31 R
0 62 V
55 -62 R
0 62 V
0 37 R
58 0 V
-58 -31 R
0 62 V
58 -62 R
0 62 V
0 -469 R
78 0 V
-78 -31 R
0 62 V
78 -62 R
0 62 V
3391 6145 CircleF
4346 6016 CircleF
4654 5701 CircleF
4858 5995 CircleF
5014 6351 CircleF
5156 5621 CircleF
5280 5366 CircleF
5385 5236 CircleF
5481 5033 CircleF
5567 5008 CircleF
5643 4617 CircleF
5713 4617 CircleF
5778 4473 CircleF
5836 4925 CircleF
5890 4509 CircleF
5943 4455 CircleF
5993 4193 CircleF
6040 4263 CircleF
6085 4124 CircleF
6128 4099 CircleF
6168 4201 CircleF
6206 3980 CircleF
6245 3734 CircleF
6284 3879 CircleF
6320 3696 CircleF
6356 3616 CircleF
6392 3727 CircleF
6429 3434 CircleF
6464 3200 CircleF
6500 3240 CircleF
6534 2986 CircleF
6568 3145 CircleF
6601 3238 CircleF
6632 3024 CircleF
6663 2923 CircleF
6696 2811 CircleF
6728 2565 CircleF
6758 2476 CircleF
6787 2501 CircleF
6820 2419 CircleF
6858 1973 CircleF
6900 1905 CircleF
6945 1847 CircleF
6993 1680 CircleF
7045 1459 CircleF
7101 1527 CircleF
7169 1089 CircleF
1.000 UL
LT2
1000 6250 M
67 0 V
67 0 V
67 0 V
67 -1 V
67 0 V
67 0 V
67 0 V
68 0 V
67 0 V
67 0 V
67 -1 V
67 0 V
67 0 V
67 0 V
67 -1 V
67 0 V
67 -1 V
67 0 V
67 -1 V
67 0 V
67 -1 V
68 -1 V
67 -1 V
67 -1 V
67 -1 V
67 -1 V
67 -2 V
67 -2 V
67 -2 V
67 -2 V
67 -2 V
67 -3 V
67 -3 V
67 -4 V
67 -4 V
68 -5 V
67 -5 V
67 -6 V
67 -7 V
67 -7 V
67 -9 V
67 -10 V
67 -10 V
67 -12 V
67 -14 V
67 -15 V
67 -18 V
67 -19 V
67 -21 V
68 -24 V
67 -26 V
67 -29 V
67 -33 V
67 -35 V
67 -39 V
67 -43 V
67 -47 V
67 -51 V
67 -55 V
67 -59 V
67 -63 V
67 -68 V
67 -71 V
68 -76 V
67 -80 V
67 -84 V
67 -87 V
67 -91 V
67 -94 V
67 -98 V
67 -102 V
67 -106 V
67 -109 V
67 -115 V
67 -119 V
67 -124 V
67 -131 V
68 -137 V
67 -144 V
67 -152 V
67 -159 V
67 -167 V
67 -176 V
67 -184 V
67 -193 V
67 -201 V
67 -209 V
67 -217 V
67 -226 V
67 -232 V
67 -240 V
68 -246 V
67 -253 V
57 -222 V
stroke
LTb
1000 7280 N
0 -6640 V
6640 0 V
0 6640 V
-6640 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
