%!PS-Adobe-2.0 EPSF-2.0
%%Title: sbps_s0463.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri Nov 26 17:07:12 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 482 446
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 5 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 20.000 def
/userlinewidth gnulinewidth def
%
/vshift -106 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sbps_s0463.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Helen Eckmiller)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Nov 26 17:07:12 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 320 scalefont setfont
1.000 UL
LTb
1000 640 M
94 0 V
6546 0 R
-94 0 V
1000 1246 M
94 0 V
6546 0 R
-94 0 V
1000 1717 M
94 0 V
6546 0 R
-94 0 V
1000 2101 M
94 0 V
6546 0 R
-94 0 V
1000 2426 M
94 0 V
6546 0 R
-94 0 V
1000 2708 M
94 0 V
6546 0 R
-94 0 V
1000 2956 M
94 0 V
6546 0 R
-94 0 V
1000 3178 M
189 0 V
6451 0 R
-189 0 V
stroke
808 3178 M
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (-9)]
] -138.7 MRshow
1.000 UL
LTb
1000 3178 M
94 0 V
6546 0 R
-94 0 V
1000 4639 M
94 0 V
6546 0 R
-94 0 V
1000 5494 M
94 0 V
6546 0 R
-94 0 V
1000 6100 M
94 0 V
6546 0 R
-94 0 V
1000 6571 M
94 0 V
6546 0 R
-94 0 V
1000 6955 M
94 0 V
6546 0 R
-94 0 V
1000 7280 M
94 0 V
6546 0 R
-94 0 V
1000 640 M
0 189 V
stroke
904 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 1)]
] -106.7 MCshow
1.000 UL
LTb
1000 640 M
0 94 V
666 -94 R
0 94 V
390 -94 R
0 94 V
277 -94 R
0 94 V
214 -94 R
0 94 V
175 -94 R
0 94 V
148 -94 R
0 94 V
129 -94 R
0 94 V
113 -94 R
0 94 V
101 -94 R
0 189 V
stroke
3117 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 10)]
] -106.7 MCshow
1.000 UL
LTb
3213 640 M
0 94 V
667 -94 R
0 94 V
389 -94 R
0 94 V
277 -94 R
0 94 V
214 -94 R
0 94 V
176 -94 R
0 94 V
148 -94 R
0 94 V
128 -94 R
0 94 V
113 -94 R
0 94 V
102 -94 R
0 189 V
stroke
5331 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 100)]
] -106.7 MCshow
1.000 UL
LTb
5427 640 M
0 94 V
666 -94 R
0 94 V
390 -94 R
0 94 V
276 -94 R
0 94 V
215 -94 R
0 94 V
175 -94 R
0 94 V
148 -94 R
0 94 V
129 -94 R
0 94 V
113 -94 R
0 94 V
101 -94 R
0 189 V
stroke
7544 320 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 1000)]
] -106.7 MCshow
1.000 UL
LTb
7640 640 M
0 94 V
1327 7280 M
0 -94 V
277 94 R
0 -94 V
214 94 R
0 -94 V
176 94 R
0 -94 V
148 94 R
0 -94 V
128 94 R
0 -94 V
113 94 R
0 -94 V
102 94 R
0 -189 V
stroke
2389 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 0.1)]
] -106.7 MCshow
1.000 UL
LTb
2485 7280 M
0 -94 V
666 94 R
0 -94 V
390 94 R
0 -94 V
276 94 R
0 -94 V
215 94 R
0 -94 V
175 94 R
0 -94 V
148 94 R
0 -94 V
129 94 R
0 -94 V
113 94 R
0 -94 V
101 94 R
0 -189 V
stroke
4602 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 1)]
] -106.7 MCshow
1.000 UL
LTb
4698 7280 M
0 -94 V
666 94 R
0 -94 V
390 94 R
0 -94 V
277 94 R
0 -94 V
214 94 R
0 -94 V
175 94 R
0 -94 V
149 94 R
0 -94 V
128 94 R
0 -94 V
113 94 R
0 -94 V
101 94 R
0 -189 V
stroke
6815 7600 M
[ [(Helvetica) 320.0 0.0 true true 0 ( 10)]
] -106.7 MCshow
1.000 UL
LTb
6911 7280 M
0 -94 V
667 94 R
0 -94 V
stroke
1000 7280 N
0 -6640 V
6640 0 V
0 6640 V
-6640 0 V
Z stroke
LCb setrgbcolor
-62 3960 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 320.0 0.0 true true 0 (surface brightness [photons/cm)]
[(Helvetica) 256.0 160.0 true true 0 (2)]
[(Helvetica) 320.0 0.0 true true 0 (/s/arcsec)]
[(Helvetica) 256.0 160.0 true true 0 (2)]
[(Helvetica) 320.0 0.0 true true 0 (])]
] -138.7 MCshow
grestore
LTb
LCb setrgbcolor
4320 0 M
[ [(Helvetica) 320.0 0.0 true true 0 (r [kpc])]
] -106.7 MCshow
LTb
LCb setrgbcolor
4320 7919 M
[ [(Helvetica) 320.0 0.0 true true 0 (r [arcmin])]
] -106.7 MCshow
LTb
1.500 UP
1.000 UL
LTb
1.500 UP
1.000 UL
LT0
3679 6546 M
0 298 V
-31 -298 R
62 0 V
-62 298 R
62 0 V
816 -217 R
0 300 V
-31 -300 R
62 0 V
-62 300 R
62 0 V
220 -304 R
0 296 V
-31 -296 R
62 0 V
-62 296 R
62 0 V
130 -449 R
0 287 V
-31 -287 R
62 0 V
-62 287 R
62 0 V
96 -331 R
0 297 V
-31 -297 R
62 0 V
-62 297 R
62 0 V
72 -148 R
0 294 V
-31 -294 R
62 0 V
-62 294 R
62 0 V
54 -451 R
0 292 V
-31 -292 R
62 0 V
-62 292 R
62 0 V
36 61 R
0 292 V
-31 -292 R
62 0 V
-62 292 R
62 0 V
30 -770 R
0 305 V
-31 -305 R
62 0 V
-62 305 R
62 0 V
30 -327 R
0 292 V
-31 -292 R
62 0 V
-62 292 R
62 0 V
25 -424 R
0 290 V
-31 -290 R
62 0 V
-62 290 R
62 0 V
20 -84 R
0 293 V
-31 -293 R
62 0 V
-62 293 R
62 0 V
16 -433 R
0 304 V
-31 -304 R
62 0 V
-62 304 R
62 0 V
11 -195 R
0 289 V
-31 -289 R
62 0 V
-62 289 R
62 0 V
8 -685 R
0 291 V
-31 -291 R
62 0 V
-62 291 R
62 0 V
8 -198 R
0 300 V
-31 -300 R
62 0 V
-62 300 R
62 0 V
6 -462 R
0 307 V
-31 -307 R
62 0 V
-62 307 R
62 0 V
6 -403 R
0 305 V
-31 -305 R
5821 5753 L
-62 305 R
62 0 V
5 -377 R
0 306 V
-31 -306 R
62 0 V
-62 306 R
62 0 V
3 -600 R
0 321 V
-31 -321 R
62 0 V
-62 321 R
62 0 V
4 -301 R
0 326 V
-31 -326 R
62 0 V
-62 326 R
62 0 V
3 -533 R
0 335 V
-31 -335 R
62 0 V
-62 335 R
62 0 V
2 -306 R
0 319 V
-31 -319 R
62 0 V
-62 319 R
62 0 V
2 -840 R
0 339 V
-31 -339 R
62 0 V
-62 339 R
62 0 V
1 -98 R
0 323 V
-31 -323 R
62 0 V
-62 323 R
62 0 V
-1 -308 R
0 340 V
-31 -340 R
62 0 V
-62 340 R
62 0 V
0 -495 R
0 348 V
-31 -348 R
62 0 V
-62 348 R
62 0 V
2 -763 R
0 348 V
-31 -348 R
62 0 V
-62 348 R
62 0 V
1 -376 R
0 357 V
-31 -357 R
62 0 V
-62 357 R
62 0 V
1 -333 R
0 360 V
-31 -360 R
62 0 V
-62 360 R
62 0 V
0 -487 R
0 363 V
-31 -363 R
62 0 V
-62 363 R
62 0 V
-1 -700 R
0 379 V
-31 -379 R
62 0 V
-62 379 R
62 0 V
-1 -423 R
0 393 V
-31 -393 R
62 0 V
-62 393 R
62 0 V
-3 -455 R
0 398 V
-31 -398 R
62 0 V
-62 398 R
62 0 V
0 -1040 R
0 426 V
-31 -426 R
62 0 V
-62 426 R
62 0 V
-1 238 R
6365 4236 L
-31 -394 R
62 0 V
-62 394 R
62 0 V
-2 -784 R
0 422 V
-31 -422 R
62 0 V
-62 422 R
62 0 V
-2 -527 R
0 421 V
-31 -421 R
62 0 V
-62 421 R
62 0 V
-2 -374 R
0 438 V
-31 -438 R
62 0 V
-62 438 R
62 0 V
-3 -411 R
0 437 V
-31 -437 R
62 0 V
-62 437 R
62 0 V
-3 -663 R
0 481 V
-31 -481 R
62 0 V
-62 481 R
62 0 V
-2 -854 R
0 560 V
-31 -560 R
62 0 V
-62 560 R
62 0 V
-2 -517 R
0 482 V
-31 -482 R
62 0 V
-62 482 R
62 0 V
-2 -15 R
0 590 V
-31 -590 R
62 0 V
-62 590 R
62 0 V
-3 -1145 R
0 502 V
-31 -502 R
62 0 V
-62 502 R
62 0 V
-4 -200 R
0 496 V
-31 -496 R
62 0 V
-62 496 R
62 0 V
-4 -1143 R
0 558 V
-31 -558 R
62 0 V
-62 558 R
62 0 V
0 -424 R
0 529 V
-31 -529 R
62 0 V
-62 529 R
62 0 V
0 -538 R
0 537 V
-31 -537 R
62 0 V
-62 537 R
62 0 V
1 -997 R
0 615 V
-31 -615 R
62 0 V
-62 615 R
62 0 V
3 -1146 R
0 688 V
-31 -688 R
62 0 V
-62 688 R
62 0 V
6 -120 R
0 614 V
-31 -614 R
62 0 V
-62 614 R
62 0 V
9 -857 R
0 626 V
-31 -626 R
62 0 V
-62 626 R
6913 2517 L
12 -825 R
0 655 V
-31 -655 R
62 0 V
-62 655 R
62 0 V
22 -1228 R
0 738 V
-31 -738 R
62 0 V
-62 738 R
62 0 V
45 -411 R
0 675 V
-31 -675 R
62 0 V
-62 675 R
62 0 V
1000 6700 M
3345 0 V
1000 6669 M
0 62 V
3345 -62 R
0 62 V
0 51 R
334 0 V
-334 -31 R
0 62 V
334 -62 R
0 62 V
0 -37 R
187 0 V
-187 -31 R
0 62 V
187 -62 R
0 62 V
0 -189 R
138 0 V
-138 -31 R
0 62 V
138 -62 R
0 62 V
0 -69 R
117 0 V
-117 -31 R
0 62 V
117 -62 R
0 62 V
0 116 R
91 0 V
-91 -31 R
0 62 V
91 -62 R
0 62 V
0 -189 R
79 0 V
-79 -31 R
0 62 V
79 -62 R
0 62 V
0 322 R
57 0 V
-57 -31 R
0 62 V
57 -62 R
0 62 V
0 -502 R
65 0 V
-65 -31 R
0 62 V
65 -62 R
0 62 V
0 -60 R
58 0 V
-58 -31 R
0 62 V
58 -62 R
0 62 V
0 -164 R
53 0 V
-53 -31 R
0 62 V
53 -62 R
0 62 V
0 177 R
49 0 V
-49 -31 R
0 62 V
49 -62 R
0 62 V
0 -165 R
46 0 V
-46 -31 R
0 62 V
46 -62 R
0 62 V
0 70 R
38 0 V
-38 -31 R
0 62 V
38 -62 R
0 62 V
0 -427 R
40 0 V
-40 -31 R
5657 6099 L
40 -62 R
0 62 V
0 67 R
37 0 V
-37 -31 R
0 62 V
37 -62 R
0 62 V
0 -189 R
37 0 V
-37 -31 R
0 62 V
37 -62 R
0 62 V
0 -128 R
38 0 V
-38 -31 R
0 62 V
38 -62 R
0 62 V
0 -102 R
34 0 V
-34 -31 R
0 62 V
34 -62 R
0 62 V
0 -317 R
34 0 V
-34 -31 R
0 62 V
34 -62 R
0 62 V
0 -9 R
35 0 V
-35 -31 R
0 62 V
35 -62 R
0 62 V
0 -233 R
34 0 V
-34 -31 R
0 62 V
34 -62 R
0 62 V
0 -10 R
32 0 V
-32 -31 R
0 62 V
32 -62 R
0 62 V
0 -542 R
33 0 V
-33 -31 R
0 62 V
33 -62 R
0 62 V
0 202 R
31 0 V
-31 -31 R
0 62 V
31 -62 R
0 62 V
0 -7 R
30 0 V
-30 -31 R
0 62 V
30 -62 R
0 62 V
0 -182 R
32 0 V
-32 -31 R
0 62 V
32 -62 R
0 62 V
0 -446 R
33 0 V
-33 -31 R
0 62 V
33 -62 R
0 62 V
0 -54 R
31 0 V
-31 -31 R
0 62 V
31 -62 R
0 62 V
0 -5 R
33 0 V
-33 -31 R
0 62 V
33 -62 R
0 62 V
0 -157 R
29 0 V
-29 -31 R
0 62 V
29 -62 R
0 62 V
0 -359 R
32 0 V
-32 -31 R
0 62 V
32 -62 R
0 62 V
0 -67 R
6290 4088 L
-28 -31 R
0 62 V
28 -62 R
0 62 V
0 -90 R
29 0 V
-29 -31 R
0 62 V
29 -62 R
0 62 V
0 -658 R
31 0 V
-31 -31 R
0 62 V
31 -62 R
0 62 V
0 615 R
29 0 V
-29 -31 R
0 62 V
29 -62 R
0 62 V
0 -406 R
29 0 V
-29 -31 R
0 62 V
29 -62 R
0 62 V
0 -136 R
30 0 V
-30 -31 R
0 62 V
30 -62 R
0 62 V
0 25 R
28 0 V
-28 -31 R
0 62 V
28 -62 R
0 62 V
0 -4 R
27 0 V
-27 -31 R
0 62 V
27 -62 R
0 62 V
0 -233 R
29 0 V
-29 -31 R
0 62 V
29 -62 R
0 62 V
0 -360 R
30 0 V
-30 -31 R
0 62 V
30 -62 R
0 62 V
0 -31 R
29 0 V
-29 -31 R
0 62 V
29 -62 R
0 62 V
0 496 R
27 0 V
-27 -31 R
0 62 V
27 -62 R
0 62 V
0 -635 R
29 0 V
-29 -31 R
0 62 V
29 -62 R
0 62 V
0 267 R
25 0 V
-25 -31 R
0 62 V
25 -62 R
0 62 V
0 -642 R
30 0 V
-30 -31 R
0 62 V
30 -62 R
0 62 V
0 86 R
31 0 V
-31 -31 R
0 62 V
31 -62 R
0 62 V
0 -35 R
31 0 V
-31 -31 R
0 62 V
31 -62 R
0 62 V
0 -447 R
33 0 V
-33 -31 R
0 62 V
33 -62 R
6787 2458 L
0 -520 R
35 0 V
-35 -31 R
0 62 V
35 -62 R
0 62 V
0 494 R
38 0 V
-38 -31 R
0 62 V
38 -62 R
0 62 V
0 -267 R
42 0 V
-42 -31 R
0 62 V
42 -62 R
0 62 V
0 -213 R
45 0 V
-45 -31 R
0 62 V
45 -62 R
0 62 V
0 -556 R
60 0 V
-60 -31 R
0 62 V
60 -62 R
0 62 V
0 260 R
92 0 V
-92 -31 R
0 62 V
92 -62 R
0 62 V
3679 6700 CircleF
4526 6782 CircleF
4777 6776 CircleF
4938 6618 CircleF
5065 6580 CircleF
5168 6727 CircleF
5253 6569 CircleF
5320 6922 CircleF
5381 6451 CircleF
5442 6422 CircleF
5498 6289 CircleF
5549 6497 CircleF
5596 6363 CircleF
5638 6464 CircleF
5677 6068 CircleF
5716 6166 CircleF
5753 6008 CircleF
5790 5911 CircleF
5826 5840 CircleF
5860 5554 CircleF
5895 5576 CircleF
5929 5374 CircleF
5962 5395 CircleF
5995 4884 CircleF
6027 5117 CircleF
6057 5141 CircleF
6088 4990 CircleF
6121 4575 CircleF
6153 4552 CircleF
6185 4578 CircleF
6216 4452 CircleF
6246 4124 CircleF
6276 4088 CircleF
6304 4029 CircleF
6335 3402 CircleF
6365 4048 CircleF
6394 3673 CircleF
6423 3568 CircleF
6452 3624 CircleF
6480 3651 CircleF
6508 3449 CircleF
6537 3120 CircleF
6566 3120 CircleF
6595 3647 CircleF
6623 3043 CircleF
6650 3341 CircleF
6677 2730 CircleF
6708 2847 CircleF
6739 2843 CircleF
6771 2427 CircleF
6805 1938 CircleF
6842 2463 CircleF
6882 2227 CircleF
6925 2045 CircleF
6978 1520 CircleF
7054 1811 CircleF
1.000 UL
LT2
1000 7216 M
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
68 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 -1 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 -1 V
68 0 V
67 0 V
67 -1 V
67 0 V
67 -1 V
67 -1 V
67 0 V
67 -1 V
67 -1 V
67 -1 V
67 -1 V
67 -2 V
67 -2 V
67 -2 V
68 -2 V
67 -2 V
67 -3 V
67 -4 V
67 -3 V
67 -5 V
67 -5 V
67 -6 V
67 -6 V
67 -8 V
67 -9 V
67 -10 V
67 -11 V
67 -13 V
68 -15 V
67 -17 V
67 -20 V
67 -22 V
67 -25 V
67 -28 V
67 -32 V
67 -37 V
67 -41 V
67 -46 V
67 -51 V
67 -58 V
67 -64 V
67 -72 V
68 -79 V
67 -87 V
67 -96 V
67 -105 V
67 -114 V
67 -123 V
67 -133 V
67 -144 V
67 -153 V
67 -163 V
67 -172 V
67 -183 V
67 -192 V
67 -200 V
68 -210 V
67 -217 V
67 -226 V
67 -232 V
67 -240 V
67 -245 V
67 -252 V
67 -257 V
67 -262 V
67 -266 V
67 -270 V
67 -273 V
67 -277 V
67 -280 V
68 -282 V
50 -213 V
stroke
LTb
1000 7280 N
0 -6640 V
6640 0 V
0 6640 V
-6640 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
